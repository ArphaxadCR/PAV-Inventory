// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Producto {
  id_producto   Int    @id @default(autoincrement())
  nombre        String?
  descripcion   String?
  codigo_barras String?
  categoria_id  Int
  categoria     Categoria @relation(fields: [categoria_id], references: [id_categoria])
  proveedor     ProductoProveedor[]
  inventario    Inventario[]
  disabled      Boolean @default(false)
}

model Inventario {
  id_inventario Int   @id @default(autoincrement())
  precio        Int
  stock         Int
  producto_id   Int
  producto      Producto @relation(fields: [producto_id], references: [id_producto])
}

model Categoria {
  id_categoria  Int   @id @default(autoincrement())
  nombre      String?
  productos   Producto[]
}

model Proveedor {
  id_proveedor  Int @id @default(autoincrement())
  nombre        String?
  telefono      String
  email         String
  producto     ProductoProveedor[]
}

model Venta {
  id_venta    Int @id @default(autoincrement())
  info_compra String?
  monto_total String?
  fecha       DateTime @default(now())
}

model ProductoProveedor {
  proveedor_id  Int
  proveedor     Proveedor @relation(fields: [proveedor_id], references: [id_proveedor])
  producto_id   Int
  producto      Producto  @relation(fields: [producto_id], references: [id_producto])
  @@id([proveedor_id, producto_id])
}